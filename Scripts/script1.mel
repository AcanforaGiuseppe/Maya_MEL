shadingNode -asShader lambert -name lambertMaterial1;
sets -renderable true -noSurfaceShader true -empty -name lambertMateralSG1;
connectAttr -f lambertMaterial1.outColor lambertMaterialSG1.surfaceShader;

shadingNode -asShader lambert -name lambertMaterial2;
sets -renderable true -noSurfaceShader true -empty -name lambertMateralSG2;
connectAttr -f lambertMaterial1.outColor lambertMaterialSG1.surfaceShader;

shadingNode -asShader blinn -name blinnMaterial;
sets -renderable true -noSurfaceShader true -empty -name blinnMaterialSG;
connectAttr -f blinnMaterial.outColor blinnMaterialSG.surfaceShader;

for($i = 0; $i < 3; $i += 1)
{
    string $sphere[] = `polySphere`;
    string $cube[] = `polyCube`;
    int $x = $i *5;
    move -r $x 0 0 $sphere[0];
    move -r $x 3 0 $cube[0];

    if($i == 0)
    {
        assignCreatedShader materials[$i] "" lambertMateral1 $cube[0];
        setAttr "lambertMaterial1.color" -type double3 1 0 0;
    }
    else if($i == 1)
    {
        assignCreatedShader materials[$i] "" lambertMateral2 $cube[0];
        setAttr "lambertMaterial2.color" -type double3 0 1 0;
    }
    else if($i == 2)
    {
        assignCreatedShader materials[$i] "" blinnMaterial $cube[0];
        setAttr "blinnMaterial.color" -type double3 0 0 1;
    }
}